(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{307:function(t,s,a){"use strict";a.r(s);var e=a(14),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"断点调试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#断点调试"}},[t._v("#")]),t._v(" 断点调试")]),t._v(" "),s("p",[t._v("1小时开发应用，6小时在debug。是否迅速的找出代码中的bug是决定开发效率的关键因素。大部分人在调试应用时还是用传统的 "),s("code",[t._v("console.log")]),t._v(" 的方式，这种方式只适用于比较简单的应用，一旦应用改的复杂程度上升，这种方式无疑是低效的。使用断点进行debug是我们日常开发中必须要掌握的技巧，比起 "),s("code",[t._v("console.log")]),t._v(" 更加的高效。如何调试ts文件请看"),s("a",{attrs:{href:"http://fe.surge.sh/guide/Ts.html#%E5%A6%82%E4%BD%95%E8%B0%83%E8%AF%95ts%E6%96%87%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v("本章节"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"调试类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调试类型"}},[t._v("#")]),t._v(" 调试类型")]),t._v(" "),s("p",[t._v("针对不同的场景不同的应用，开启断点调试的方法也不一样。目前主要分为")]),t._v(" "),s("ul",[s("li",[t._v("本地调试Launch Program 简单说，就是直接执行，上文最简单的断点调试都属于这种模式")]),t._v(" "),s("li",[t._v("远程调试Attach to Process 简单说，是调试某个已启动的线程, 常见的场景就是调试启动的http-server")])]),t._v(" "),s("p",[t._v("下面让我们先来介绍一下大部分场景下如何开启使用本地调试，远程调试方式我们着重介绍在VS Code中如何调试")]),t._v(" "),s("h3",{attrs:{id:"node-debug"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-debug"}},[t._v("#")]),t._v(" node-debug")]),t._v(" "),s("p",[t._v("已废弃被 "),s("code",[t._v("node inspect")]),t._v(" 代替，不多介绍")]),t._v(" "),s("h3",{attrs:{id:"node-inspect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-inspect"}},[t._v("#")]),t._v(" node-inspect")]),t._v(" "),s("p",[t._v("使用Node.js自带的inspect功能来开启断点调试")]),t._v(" "),s("h4",{attrs:{id:"使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[t._v("#")]),t._v(" 使用方式")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// break.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("debugger")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 功能类似于浏览器中的断点")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ node inspect break.js\n")])])]),s("p",[t._v("此时会显示debug界面")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB12k.CcAY2gK0jSZFgXXc5OFXa-1134-856.jpg",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[t._v("#")]),t._v(" 用法")]),t._v(" "),s("p",[t._v("显示debug界面后，我们通过键盘来进行不同的操作，这里我们介绍最常用的几项操作")]),t._v(" "),s("ul",[s("li",[t._v("n 单步执行")]),t._v(" "),s("li",[t._v("c 继续执行，即跳到下一个断点")]),t._v(" "),s("li",[t._v("s 单步调试 点击后进入到当前方法的内部调试")]),t._v(" "),s("li",[t._v("o 单步跳出 跳出当前调试的方法，与单步调试对应")]),t._v(" "),s("li",[t._v("repl 进入repl(交互解释器)环境，此时可以查看某一个变量的值")])]),t._v(" "),s("h4",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("此方法过于繁琐低效，以了解为主，知道有这种调试方法即可。在一些远程服务器上，我们有时候会用到该方法来进行调试")]),t._v(" "),s("h3",{attrs:{id:"chrome-node-inspect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chrome-node-inspect"}},[t._v("#")]),t._v(" Chrome + node --inspect")]),t._v(" "),s("p",[t._v("借助Chrome的开发工具让我们可以在Chrome中进行断点调试")]),t._v(" "),s("h4",{attrs:{id:"使用方式-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用方式-2"}},[t._v("#")]),t._v(" 使用方式")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--inspect")]),t._v(" break.js "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启用debug")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" --inspect-brk break.js "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启用debug并在第一行暂停，即默认第一行设置了断点，建议使用这种方式来启动")]),t._v("\n")])])]),s("p",[t._v("打开 "),s("code",[t._v("chrome://inspect/#devices")]),t._v(" , 进入到熟悉的界面，此时是 "),s("code",[t._v("远程调试")]),t._v(" 模式")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB17cIHcBv0gK0jSZKbXXbK2FXa-1346-624.png",alt:""}}),t._v(" "),s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB10VoIcxv1gK0jSZFFXXb0sXXa-1514-534.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"总结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("此种方式比较常见，我们经常会在Chrome中进行debug，Chrome的调试功能也是无比强大")]),t._v(" "),s("h3",{attrs:{id:"借助-vs-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#借助-vs-code"}},[t._v("#")]),t._v(" 借助 VS Code")]),t._v(" "),s("p",[t._v("借助目前的前端开发第一工具，我们可以很方便的来进行断点调试")]),t._v(" "),s("h4",{attrs:{id:"本地调试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地调试"}},[t._v("#")]),t._v(" 本地调试")]),t._v(" "),s("p",[s("code",[t._v("cmd + 4")]),t._v(" 打开调试菜单栏，选择 "),s("code",[t._v("添加配置")]),t._v(" -> "),s("code",[t._v("启动程序")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1e8sMcrH1gK0jSZFwXXc7aXXa-1364-668.png",alt:""}}),t._v("\n生成如下调试配置")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.2.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"configurations"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"request"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"launch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Launch Program"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${workspaceFolder}/break.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 选择工作目录下的break.js")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "program": "${file}" 使用变量来获取当前打开的文件')]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("按 "),s("code",[t._v("F5")]),t._v(" 启动调试，出现熟悉的界面")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB17pkOcuH2gK0jSZJnXXaT1FXa-1002-346.png",alt:""}})]),t._v(" "),s("h4",{attrs:{id:"远程调试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远程调试"}},[t._v("#")]),t._v(" 远程调试")]),t._v(" "),s("p",[t._v("这里我们以express应用为例，我们在本地新建项目并且启动服务")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" express-generator "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v("\n$ express "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--view")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pug myapp\n$ "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" myapp\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" start\n")])])]),s("p",[t._v("通过以上命令，我们新建了一个express应用并且启动。点击齿轮按钮，打开launch.json")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gw.alicdn.com/tfs/TB1iKQHXxv1gK0jSZFFXXb0sXXa-1734-628.png",alt:""}})]),t._v(" "),s("p",[t._v("点击绿色箭头，选择添加配置，选择附加到进程选项")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gw.alicdn.com/tfs/TB1hUEHXrj1gK0jSZFuXXcrHpXa-1054-716.png",alt:""}})]),t._v(" "),s("p",[t._v("按 "),s("code",[t._v("F5")]),t._v(" 启动debug，选择第一个进程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gw.alicdn.com/tfs/TB1kkIGXAT2gK0jSZFkXXcIQFXa-1438-662.jpg",alt:""}})]),t._v(" "),s("p",[t._v("浏览器中访问 "),s("code",[t._v("http://localhost:3000")]),t._v(" VS Code就能够检测到触发断点，接下来就是我们熟悉的界面")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://gw.alicdn.com/tfs/TB1yHgIXrr1gK0jSZFDXXb9yVXa-1122-436.jpg",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"断点调试类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#断点调试类型"}},[t._v("#")]),t._v(" 断点调试类型")]),t._v(" "),s("p",[t._v("这里说一下从左到右我们的断点调试类型分为4种")]),t._v(" "),s("ul",[s("li",[t._v("继续调试 点击后代码会执行到下一个断点所在位置，如果没有下一个断点，则认为该次请求执行完毕")]),t._v(" "),s("li",[t._v("单步跳过 点击后会跳到当前代码下一行继续执行，不会进入到方法内部")]),t._v(" "),s("li",[t._v("单步调试 点击后进入到当前方法的内部调试，例如在res.render这一行中执行单步调试，会进入到res.render方法内部进行调试")]),t._v(" "),s("li",[t._v("单步跳出 跳出当前调试的方法，与单步调试对应")])]),t._v(" "),s("h2",{attrs:{id:"总结-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-3"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("我们介绍了本地调试与远程调试两种场景，以及几种开启断点调试的方式，以上几种方式以了解为主，建议熟练掌握一种VS Code中如何使用断点调试的方式即可, 需要了解每个配置项的含义。\n如果想要更进一步详细的了解debug的原理，可以查看"),s("a",{attrs:{href:"https://i5ting.github.io/node-debug-tutorial/#1",target:"_blank",rel:"noopener noreferrer"}},[t._v("node-debug-tutorial"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);